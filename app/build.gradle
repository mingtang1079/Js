apply plugin: 'com.android.application'
// 依赖插件脚本
apply from: 'tinker-support.gradle'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getDefault())
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.example.administrator.js"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode 28
        versionName "1.0.5"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    sourceSets {
        main {
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    /*** 签名设置 */
    signingConfigs {
        release {
            storeFile file('js.jks')
            storePassword '12345678'
            keyAlias '1'
            keyPassword '12345678'
        }
        debug {
            storeFile file('js.jks')
            storePassword '12345678'
            keyAlias '1'
            keyPassword '12345678'
        }
    }
    buildTypes {
        release {
            buildConfigField "String", "BASE_URL", "\"https://www.cdmuscle.com/api\""
            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {

            buildConfigField "String", "BASE_URL", "\"https://www.cdmuscle.com/api\""
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
        }
    }
    configurations.all {
        resolutionStrategy.force "com.android.support:support-annotations:26.1.0"
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    android.applicationVariants.all { variant ->
        variant.outputs.each {
            output -> output.outputFile = new File(output.outputFile.parent + "/${defaultConfig.versionName}", "健身_" + defaultConfig.versionName + "_" + releaseTime() + "_" + variant.flavorName + "_" + buildType.name + ".apk")
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile files('libs/alipaySdk.jar')
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:1.0.1'
    androidTestCompile rootProject.ext.dependencies["annotations"]
    androidTestCompile('com.android.support.test.espresso:espresso-core:3.0.1') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    compile project(':baselibrary')
    compile project(':IMKit')
    compile project(':share')
    // compile project(':IMLib')
    //life
    annotationProcessor("android.arch.lifecycle:compiler:1.0.0") {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    compile(rootProject.ext.dependencies["lifecycle_runtime"]) {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    compile(rootProject.ext.dependencies["lifecycle_extensions"]) {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    compile(rootProject.ext.dependencies["lifecycle_reactivestreams"]) {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    compile(rootProject.ext.dependencies["butterknife"]) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'support-annotations'
        exclude module: 'butterknife-annotations'
    }
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    compile 'com.github.ittianyu:BottomNavigationViewEx:1.2.4'
    compile(rootProject.ext.dependencies["circleimageview"]) {
    }
    compile project(':photopicker')
    compile 'top.zibin:Luban:1.1.3'
    compile rootProject.ext.dependencies["ucop"]
    compile rootProject.ext.dependencies["pull_refresh"]
    compile 'com.google.android:flexbox:0.3.2'
    compile 'com.youth.banner:banner:1.4.10'
    //最新版本
    //3D地图so及jar
    compile 'com.amap.api:3dmap:latest.integration'
    //定位功能
    compile 'com.amap.api:location:latest.integration'
    compile 'com.amap.api:map2d:latest.integration'
    compile 'com.amap.api:search:latest.integration'
    compile 'com.github.MagicMashRoom:SuperCalendar:1.6'
    compile 'com.google.android:flexbox:1.0.0'
    //  compile 'com.google.zxing:core:3.2.1'
    compile 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    compile 'com.tencent.tinker:tinker-android-lib:1.9.6'
    compile 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    compile 'com.sina.weibo.sdk:core:4.1.0:openDefaultRelease@aar'
}
